name: Scrape Balearic Regattas

on:
  schedule:
    # Run daily at 6:00 AM UTC (7:00 AM CET / 8:00 AM CEST)
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering for testing
  push:
    branches: [ main ]  # Run on push for testing (remove after initial setup)

jobs:
  scrape-regattas:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent hanging jobs
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run regatta scraper
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        python scraper.py
      continue-on-error: true  # Don't fail the workflow if scraper has issues
        
    - name: Check if regattas were found
      run: |
        if [ -f regattas.json ]; then
          echo "‚úÖ Regattas file created"
          echo "üìä Found $(jq '. | length' regattas.json) regattas"
        else
          echo "‚ö†Ô∏è No regattas.json file created"
        fi
        
    - name: Commit and push results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add regattas.json || true
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ü§ñ Update regatta data - $(date -u +'%Y-%m-%d %H:%M UTC')"
          git push || echo "Push failed, continuing..."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload results as artifact (for debugging)
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: regatta-results
        path: |
          regattas.json
          *.log
        retention-days: 7
